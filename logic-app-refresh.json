{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Describes the name of the Logic App resource"
            },
            "defaultValue": "[concat('ealogicapp', uniquestring(resourceGroup().id), '-', parameters('enterpriseAzureId'))]"
        },
        "keyVaultName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Describes the name of the Key Vault resource"
            },
            "defaultValue": "[concat('eakeyvault', uniquestring(resourceGroup().id))]"
        },
        "storageAccountName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Describes the name of the Storage Account resource"
            },
            "defaultValue": "[concat('eastorage', uniquestring(resourceGroup().id))]"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the Azure location where the key vault should be created."
            }
        },
        "enterpriseAzureId": {
            "type": "string",
            "metadata": {
                "description": "EA IDs."
            }
        },
        "enterpriseAzureKey": {
            "type": "securestring",
            "metadata": {
                "description": "EA Key."
            }
        }
    },
    "variables": {
        "azureblobApiConnectionName": "azureblob",
        "azureblobConnectionResourceId": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/', variables('azureblobApiConnectionName'))]",
        "azureblobConnectionApiId": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
    },
    "resources": [
        {
            "name": "[parameters('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "accessTier": "Hot"
            },
            "resources": [
                {
                    "name": "[concat('default/', 'data')]",
                    "type": "blobServices/containers",
                    "apiVersion": "2018-07-01",
                    "dependsOn": [
                        "[parameters('storageAccountName')]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[parameters('keyVaultName')]",
            "apiVersion": "2018-02-14",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
            ],
            "properties": {
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "objectId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '2019-05-01', 'Full').identity.principalId]",
                        "tenantId": "[subscription().tenantId]",
                        "permissions": {
                            "secrets": ["get"]
                        }
                    }
                ],
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "networkAcls": {
                    "value": {
                        "defaultAction": "Allow",
                        "bypass": "AzureServices"
                    }
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(parameters('keyVaultName'), '/', parameters('EnterpriseAzureId'))]",
            "apiVersion": "2018-02-14",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('EnterpriseAzureKey')]"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "name": "[variables('azureblobApiConnectionName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "api": {
                    "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
                },
                "displayName": "azureblob",
                "nonSecretParameterValues": {},
                "parameterValues": {
                    "accountName": "[parameters('storageAccountName')]",
                    "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azureblobApiConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
            "For_each_Billing_Period": {
                "actions": {
                    "Are_There_Any_Usage_Details": {
                        "actions": {
                            "Copy_blob": {
                                "inputs": {
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['azureblob']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/datasets/default/copyFile",
                                    "queries": {
                                        "destination": "/data/usagedetail-@{variables('EA')}-@{items('For_each_Billing_Period')['billingPeriodId']}.csv",
                                        "overwrite": true,
                                        "queryParametersSingleEncoded": true,
                                        "source": "@{body('Pooling_Usage_Details')['blobPath']}"
                                    }
                                },
                                "runAfter": {
                                    "Until": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection"
                            },
                            "Get_Usage_Details": {
                                "inputs": {
                                    "headers": {
                                        "Authorization": "Bearer @{body('Get_Token')['value']}"
                                    },
                                    "method": "POST",
                                    "uri": "https://consumption.azure.com/v3/enrollments/@{variables('EA')}/usagedetails/submit?billingPeriod=@{items('For_each_Billing_Period')['billingPeriodId']}"
                                },
                                "runAfter": {},
                                "type": "Http"
                            },
                            "Until": {
                                "actions": {
                                    "Delay": {
                                        "inputs": {
                                            "interval": {
                                                "count": 20,
                                                "unit": "Second"
                                            }
                                        },
                                        "runAfter": {},
                                        "type": "Wait"
                                    },
                                    "Pooling_Usage_Details": {
                                        "inputs": {
                                            "headers": {
                                                "Authorization": "Bearer @{body('Get_Token')['value']}"
                                            },
                                            "method": "GET",
                                            "uri": "@{body('Get_Usage_Details')['reportUrl']}"
                                        },
                                        "runAfter": {
                                            "Delay": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Http"
                                    }
                                },
                                "expression": "@greaterOrEquals(body('Pooling_Usage_Details')['status'], 3)",
                                "limit": {
                                    "count": 60,
                                    "timeout": "PT1H"
                                },
                                "runAfter": {
                                    "Get_Usage_Details": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Until"
                            }
                        },
                        "expression": {
                            "and": [
                                {
                                    "not": {
                                        "equals": [
                                            "@items('For_each_Billing_Period')['usageDetails']",
                                            ""
                                        ]
                                    }
                                }
                            ]
                        },
                        "runAfter": {},
                        "type": "If"
                    },
                    "Are_there_any_Marketplace_Charges": {
                        "actions": {
                            "Create_CSV_table": {
                                "inputs": {
                                    "format": "CSV",
                                    "from": "@body('Get_Marketplace_Charges')"
                                },
                                "runAfter": {
                                    "Get_Marketplace_Charges": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Table"
                            },
                            "Create_blob": {
                                "inputs": {
                                    "body": "@body('Create_CSV_table')",
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['azureblob']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/datasets/default/files",
                                    "queries": {
                                        "folderPath": "/data",
                                        "name": "marketplace-@{variables('EA')}-@{items('For_each_Billing_Period')['billingPeriodId']}.csv",
                                        "queryParametersSingleEncoded": true
                                    }
                                },
                                "runAfter": {
                                    "Create_CSV_table": [
                                        "Succeeded"
                                    ]
                                },
                                "runtimeConfiguration": {
                                    "contentTransfer": {
                                        "transferMode": "Chunked"
                                    }
                                },
                                "type": "ApiConnection"
                            },
                            "Get_Marketplace_Charges": {
                                "inputs": {
                                    "headers": {
                                        "Authorization": "Bearer @{body('Get_Token')['value']}"
                                    },
                                    "method": "GET",
                                    "uri": "https://consumption.azure.com/@{items('For_each_Billing_Period')['marketplaceCharges']}"
                                },
                                "runAfter": {},
                                "type": "Http"
                            }
                        },
                        "expression": {
                            "and": [
                                {
                                    "not": {
                                        "equals": [
                                            "@items('For_each_Billing_Period')['marketplaceCharges']",
                                            ""
                                        ]
                                    }
                                }
                            ]
                        },
                        "runAfter": {
                            "Are_There_Any_Usage_Details": [
                                "Succeeded"
                            ]
                        },
                        "type": "If"
                    }
                },
                "foreach": "@take(body('Get_Billing_Periods'), 2)",
                "runAfter": {
                    "Get_Billing_Periods": [
                        "Succeeded"
                    ]
                },
                "type": "Foreach"
            },
            "Get_Billing_Periods": {
                "inputs": {
                    "headers": {
                        "Accept": "application/json",
                        "Authorization": "Bearer @{body('Get_Token')['value']}"
                    },
                    "method": "GET",
                    "uri": "https://consumption.azure.com/v2/enrollments/@{variables('EA')}/billingperiods"
                },
                "runAfter": {
                    "Get_Token": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "Get_Token": {
                "inputs": {
                    "authentication": {
                        "audience": "https://vault.azure.net",
                        "type": "ManagedServiceIdentity"
                    },
                    "headers": {
                        "Content-Type": "application/json"
                    },
                    "method": "GET",
                    "uri": "[concat('https://',parameters('keyVaultName'),'.vault.azure.net/secrets/@{variables(''EA'')}/?api-version=7.0')]"
                },
                "runAfter": {
                    "Initialize_variable": [
                        "Succeeded"
                    ]
                },
                "runtimeConfiguration": {
                    "secureData": {
                        "properties": [
                            "outputs"
                        ]
                    }
                },
                "type": "Http"
            },
            "Initialize_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "EA",
                            "type": "String",
                            "value": "[parameters('enterpriseAzureId')]"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            }
        },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "schedule": {
                                    "hours": [
                                        "3"
                                    ]
                                }
                            },
                            "type": "Recurrence"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[variables('azureblobConnectionResourceId')]",
                                "connectionName": "azureblob",
                                "id": "[variables('azureblobConnectionApiId')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}